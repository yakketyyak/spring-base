/*
 * Created on 29 mars 2018 ( Time 16:46:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package ci.smile.hosting.dao.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "user"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user" )
public class User implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="user_name", length=255)
    private String     userName     ;

    @Column(name="password", length=255)
    private String     password     ;

    @Column(name="email", length=255)
    private String     email        ;

    @Column(name="locked")
    private Boolean    locked       ;

    @Column(name="expired")
    private Boolean    expired      ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_login")
    private Date       lastLogin    ;

    @Column(name="pwd_is_default_pwd")
    private Boolean    pwdIsDefaultPwd ;

    @Column(name="is_deleted")
    private Boolean    isDeleted    ;

    @Column(name="forgot_password_code", length=255)
    private String     forgotPasswordCode ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at")
    private Date       createdAt    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="code_expired_at")
    private Date       codeExpiredAt ;

    @Column(name="is_valid_code")
    private Boolean    isValidCode  ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public User() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : user_name ( VARCHAR ) 
    public void setUserName( String userName ) {
        this.userName = userName;
    }
    public String getUserName() {
        return this.userName;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : locked ( BIT ) 
    public void setLocked( Boolean locked ) {
        this.locked = locked;
    }
    public Boolean getLocked() {
        return this.locked;
    }

    //--- DATABASE MAPPING : expired ( DATETIME ) 
    public void setExpired( Boolean expired ) {
        this.expired = expired;
    }
    public Boolean getExpired() {
        return this.expired;
    }

    //--- DATABASE MAPPING : last_login ( DATETIME ) 
    public void setLastLogin( Date lastLogin ) {
        this.lastLogin = lastLogin;
    }
    public Date getLastLogin() {
        return this.lastLogin;
    }

    //--- DATABASE MAPPING : pwd_is_default_pwd ( BIT ) 
    public void setPwdIsDefaultPwd( Boolean pwdIsDefaultPwd ) {
        this.pwdIsDefaultPwd = pwdIsDefaultPwd;
    }
    public Boolean getPwdIsDefaultPwd() {
        return this.pwdIsDefaultPwd;
    }

    //--- DATABASE MAPPING : is_deleted ( BIT ) 
    public void setIsDeleted( Boolean isDeleted ) {
        this.isDeleted = isDeleted;
    }
    public Boolean getIsDeleted() {
        return this.isDeleted;
    }

    //--- DATABASE MAPPING : forgot_password_code ( VARCHAR ) 
    public void setForgotPasswordCode( String forgotPasswordCode ) {
        this.forgotPasswordCode = forgotPasswordCode;
    }
    public String getForgotPasswordCode() {
        return this.forgotPasswordCode;
    }

    //--- DATABASE MAPPING : created_at ( DATETIME ) 
    public void setCreatedAt( Date createdAt ) {
        this.createdAt = createdAt;
    }
    public Date getCreatedAt() {
        return this.createdAt;
    }

    //--- DATABASE MAPPING : code_expired_at ( DATETIME ) 
    public void setCodeExpiredAt( Date codeExpiredAt ) {
        this.codeExpiredAt = codeExpiredAt;
    }
    public Date getCodeExpiredAt() {
        return this.codeExpiredAt;
    }

    //--- DATABASE MAPPING : is_valid_code ( BIT ) 
    public void setIsValidCode( Boolean isValidCode ) {
        this.isValidCode = isValidCode;
    }
    public Boolean getIsValidCode() {
        return this.isValidCode;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(userName);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(locked);
        sb.append("|");
        sb.append(expired);
        sb.append("|");
        sb.append(lastLogin);
        sb.append("|");
        sb.append(pwdIsDefaultPwd);
        sb.append("|");
        sb.append(isDeleted);
        sb.append("|");
        sb.append(forgotPasswordCode);
        sb.append("|");
        sb.append(createdAt);
        sb.append("|");
        sb.append(codeExpiredAt);
        sb.append("|");
        sb.append(isValidCode);
        return sb.toString(); 
    } 

}
